{"version":3,"sources":["style.tsx","components/components/Header/index.tsx","components/components/Nav/index.tsx","components/components/AppContainer/index.tsx","components/components/Button/index.tsx","components/pages/HomePage/index.tsx","training/common.ts","training/verticalLine2.ts","training/index.ts","components/components/TrainingMenu/index.tsx","components/components/Timer/index.tsx","components/pages/TrainingMenuPage/index.tsx","util.ts","components/components/Training/VerticalLine/constants.ts","components/components/Training/VerticalLine/VerticalLineLayer.tsx","components/components/Training/VerticalLine/index.tsx","components/components/Training/index.tsx","components/components/TrainingStart/index.tsx","components/components/Rating/index.tsx","components/components/TrainingResult/index.tsx","components/pages/TrainingPage/index.tsx","components/pages/ReportPage/index.tsx","components/components/Menu/index.tsx","components/pages/SettingPage/index.tsx","components/components/ScaleCorrector/index.tsx","components/pages/ScaleCorrectionPage/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["library","add","faShapes","faChartLine","faSlidersH","theme","accent","inactive","globalCSS","css","styled","emotionStyled","useTheme","useContext","ThemeContext","ThemeProvider","children","GlobalStyle","styles","Mode","Header","className","hidden","closable","onClose","onClick","Wrapper","div","MenuItem","active","Icon","FontAwesomeIcon","Nav","selected","onSelect","Training","icon","Report","Setting","AppContainer","currentMode","navHidden","onModeChange","headerClosable","onHeaderClose","role","StyledButton","button","Button","toUpperCase","Rating","Level","TrainingType","HomePage","onSignIn","verticalLine2","paramsSize","stateSize","duration","Easy","Infinity","Normal","Hard","Ultimate","validateParams","barLength","bar2Length","ratio","Math","abs","judgeScore","params","state","range","min","trainings","VerticalLine2","initTraining","type","trainingMenu","i","Array","fill","map","random","validated","isArray","DisplayStyle","types","levels","bgcolor","TrainingMenu","useState","selectedType","selectType","handleTypeClick","useCallback","console","log","handleLevelClick","level","label","key","TrainingPageMenu","numberArrayEqual","a","b","length","every","c","calcLength","scaleCorrection","VerticalLineLayer","longerLength","lineLength","x","y","answerRatio","onMouseDown","onTouchStart","points","strokeWidth","stroke","whiskerLength","VerticalLine","isAnswerShown","screenSize","disableOperation","onUpdate","wrapperRef","useRef","line2Length","max","pointRatio","statePointRatio","undefined","dragStartInputs","v","useEventCallback","event$","inputs$","state$","merge","pipe","distinctUntilChanged","mapTo","withLatestFrom","filter","e","evt","TouchEvent","targetTouches","pageY","current","getBoundingClientRect","top","offsetY","mergeMap","firstY","fromEvent","document","e2","startWith","takeUntil","tap","skip","d","calcStateFromY","dragStartCallback","statePointRatio2","ref","width","height","props","Component","t","getTrainingComponent","BarWrapper","Bar","TextWrapper","Timer","onTimeUp","id","enabled","displayStyle","setRatio","seconds","setSeconds","onTimeUpRef","useEffect","start","Date","now","time","setInterval","r","ceil","clearInterval","TrainingStart","onStart","buttonPushed","setButtonPushed","handleClick","Text","RatingEnum","Legend","color","Excellent","Good","Bad","StyledSvg","svg","score","small","rating","getRating","version","viewBox","xmlns","xmlnsXlink","dx","dy","stdDeviation","result","operator","in","in2","flood-color","flood-opacity","text-anchor","dominant-baseline","fontSize","fontWeight","humanReadableScore","round","TrainingResult","scores","totalScore","reduce","s","TrainingPage","onFinish","useMemo","count","p","initTrainings","started","setStarted","currentTraining","changeTraining","currentState","setCurrentState","setAnswerShown","useResizeObserver","resizeRef","handleAnswer","handleNext","isAnswerable","validateState","handleTimeUp","handleStart","trainingSize","getDuration","ReportPage","Item","Menu","items","item","iconColor","ScaleCorrection","SignOut","SettingPage","ScaleCorrector","onEnter","value","setValue","sc","onChange","parseFloat","currentTarget","Route","ScaleCorrectionPage","onScaleCorrectionEnter","hot","Home","currentRoute","jumpTo","setScaleCorrection","training","setTraining","mode","TrainingMenuPage","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa3c07c3.chunk.js","sourcesContent":["import React, { FC, useContext } from \"react\";\nimport { Global, css, ThemeContext } from \"@emotion/core\";\nimport emotionStyled, { CreateStyled } from \"@emotion/styled\";\nimport { ThemeProvider as EmotionThemeProvider } from \"emotion-theming\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faShapes,\n  faChartLine,\n  faSlidersH\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faShapes, faChartLine, faSlidersH);\n\nexport const theme = {\n  accent: \"tomato\",\n  inactive: \"#aaa\"\n};\n\nconst globalCSS = css`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\n      \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n      \"Helvetica Neue\", sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  html,\n  body,\n  #root {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n`;\n\nexport const styled = emotionStyled as CreateStyled<typeof theme>;\nexport const useTheme = () => useContext<typeof theme>(ThemeContext as any);\nexport const ThemeProvider: FC = ({ children }) => (\n  <EmotionThemeProvider theme={theme}>{children}</EmotionThemeProvider>\n);\nexport const GlobalStyle: FC = () => <Global styles={globalCSS} />;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport { useTheme } from \"@katachi/style\";\n\nexport interface Props {\n  className?: string;\n  hidden?: boolean;\n  closable?: boolean;\n  onClose?: () => void;\n}\n\nconst Header: React.FC<Props> = ({ className, hidden, closable, onClose }) => {\n  const theme = useTheme();\n\n  return hidden ? null : (\n    <div\n      css={css`\n        font-size: 1.2rem;\n        padding: 0 1em;\n        color: ${theme.accent};\n        height: 3em;\n        line-height: 3em;\n        font-weight: bold;\n        text-align: center;\n      `}\n      className={className}\n    >\n      katachi\n      {closable && (\n        <div\n          css={css`\n            width: 3em;\n            height: 3em;\n            position: absolute;\n            top: 0;\n            right: 0;\n            cursor: pointer;\n            user-select: none;\n            text-align: center;\n            line-height: 3em;\n            color: #888;\n          `}\n          onClick={onClose}\n        >\n          &times;\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { styled } from \"@katachi/style\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport enum Mode {\n  Training,\n  Report,\n  Setting\n}\n\nexport interface Props {\n  className?: string;\n  selected?: Mode;\n  onSelect?: (mode: Mode) => void;\n}\n\nconst Nav: React.FC<Props> = ({ className, selected, onSelect }) => {\n  return (\n    <Wrapper className={className}>\n      <MenuItem\n        active={selected === Mode.Training}\n        onClick={() => onSelect && onSelect(Mode.Training)}\n      >\n        <div>\n          <Icon icon=\"shapes\" />\n          トレーニング\n        </div>\n      </MenuItem>\n      <MenuItem\n        active={selected === Mode.Report}\n        onClick={() => onSelect && onSelect(Mode.Report)}\n      >\n        <div>\n          <Icon icon=\"chart-line\" />\n          レポート\n        </div>\n      </MenuItem>\n      <MenuItem\n        active={selected === Mode.Setting}\n        onClick={() => onSelect && onSelect(Mode.Setting)}\n      >\n        <div>\n          <Icon icon=\"sliders-h\" />\n          設定\n        </div>\n      </MenuItem>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n  height: 4em;\n`;\n\nconst MenuItem = styled.div<{ active?: boolean }>`\n  flex: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  text-align: center;\n  font-size: 0.8rem;\n  font-weight: bold;\n  color: ${({ active, theme }) => (active ? theme.accent : theme.inactive)};\n  flex: 1 1 0;\n  user-select: none;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  display: block;\n  margin: 0 auto 0.2em;\n  font-size: 1.5rem;\n`;\n\nexport default Nav;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\n\nimport Header from \"../Header\";\nimport Nav, { Mode } from \"../Nav\";\n\nexport { Mode };\n\nexport interface Props {\n  className?: string;\n  navHidden?: boolean;\n  currentMode?: Mode;\n  onModeChange?: (mode: Mode) => void;\n  headerClosable?: boolean;\n  onHeaderClose?: () => void;\n}\n\nconst AppContainer: React.FC<Props> = ({\n  className,\n  children,\n  currentMode,\n  navHidden,\n  onModeChange,\n  headerClosable,\n  onHeaderClose\n}) => {\n  return (\n    <div\n      className={className}\n      css={css`\n        position: relative;\n        display: flex;\n        flex-direction: column;\n      `}\n    >\n      <header>\n        <Header closable={headerClosable} onClose={onHeaderClose} />\n      </header>\n      <main\n        role=\"main\"\n        css={css`\n          flex: auto;\n          overflow: hidden;\n          overflow-y: auto;\n        `}\n      >\n        {children}\n      </main>\n      <nav\n        css={css`\n          display: ${navHidden ? \"none\" : \"block\"};\n        `}\n      >\n        <Nav selected={currentMode} onSelect={onModeChange} />\n      </nav>\n    </div>\n  );\n};\n\nexport default AppContainer;\n","import React from \"react\";\nimport { styled } from \"@katachi/style\";\n\nexport interface Props {\n  className?: string;\n  children?: string;\n  onClick?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nconst Button: React.FC<Props> = ({ className, children, onClick }) => {\n  return (\n    <StyledButton className={className} onClick={onClick}>\n      {children ? children.toUpperCase() : \"\"}\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  width: 100%;\n  font-size: 14px;\n  border-radius: 0.5em;\n  border: none;\n  outline: none;\n  background-color: ${({ theme }) => theme.accent};\n  color: #fff;\n  padding: 1em 3em;\n  box-shadow: 0 0.1em 0.5em #00000030;\n  cursor: pointer;\n  transition: all ease 0.1s;\n\n  &:hover {\n    filter: brightness(120%);\n  }\n\n  &:active {\n    filter: brightness(100%);\n    transform: translateY(1px);\n  }\n`;\n\nexport default Button;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\n\nimport Button from \"@katachi/components/components/Button\";\n\nexport interface Props {\n  className?: string;\n  onSignIn?: () => void;\n}\n\nconst HomePage: React.FC<Props> = ({ className, onSignIn }) => {\n  return (\n    <div\n      className={className}\n      css={css`\n        padding: 1em;\n      `}\n    >\n      <h1>形を正確に観る \"眼\" を養うトレーニング</h1>\n      <Button onClick={onSignIn}>Twitterでログイン</Button>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export interface TrainingMenu {\n  paramsSize: number;\n  stateSize: number;\n  duration: { [key in Level]: number };\n  validateParams: (params: number[]) => number[] | boolean;\n  judgeScore: (params: number[], state?: number[]) => number;\n}\n\nexport enum Rating {\n  Legend = \"legend\",\n  Excellent = \"excellent\",\n  Good = \"good\",\n  Bad = \"bad\"\n}\n\nexport enum Level {\n  Easy = \"easy\",\n  Normal = \"normal\",\n  Hard = \"hard\",\n  Ultimate = \"ultimate\"\n}\n\nexport enum TrainingType {\n  VerticalLine2 = \"verticalLine2\"\n  // VerticalLine3 = \"verticalLine3\",\n  // HorizontalLine2 = \"horizontailLine2\",\n  // HorizontalLine3 = \"horizontalLine3\",\n  // Square = \"square\",\n  // SquareVerticalLine = \"squareVerticalLine\",\n  // SquareSkewedLine = \"squareSkewedLine\",\n  // SquareDogleggedLine = \"squareDogleggedLine\",\n  // SquareTriangle = \"squareTriangle\",\n  // SquarePoint = \"squarePoint\",\n  // Ellipse = \"ellipse\",\n  // EllipseMultiple = \"ellipseMultiple\"\n}\n","import { TrainingMenu, Level } from \"./common\";\n\nconst verticalLine2: TrainingMenu = {\n  paramsSize: 3,\n  stateSize: 1,\n  duration: {\n    [Level.Easy]: Infinity,\n    [Level.Normal]: 10000,\n    [Level.Hard]: 3000,\n    [Level.Ultimate]: 1000\n  },\n  validateParams: ([barLength, bar2Length, ratio]) =>\n    barLength > 0.3 &&\n    bar2Length > 0.3 &&\n    Math.abs(barLength - bar2Length) >= 0.2 &&\n    ratio > 0.1 &&\n    ratio < 0.9,\n  judgeScore: (params, state) => {\n    if (params[0] === 0) return 0;\n    const range = 0.3 - 0.1 * params[0];\n    return state\n      ? 1 - Math.min(range, Math.abs(params[2] - state[0])) / range\n      : 0;\n  }\n};\n\nexport default verticalLine2;\n","import { TrainingType, TrainingMenu, Rating, Level } from \"./common\";\nimport verticalLine2 from \"./verticalLine2\";\n\nexport * from \"./common\";\nexport { TrainingType, Rating, Level };\n\nconst trainings: { [key in TrainingType]: TrainingMenu } = {\n  [TrainingType.VerticalLine2]: verticalLine2\n};\n\nexport const initTrainings = (\n  type: TrainingType,\n  count: number\n): number[][] | undefined => {\n  const params = new Array(count).fill(0).map(() => initTraining(type));\n  return params.every((p): p is number[] => typeof p !== \"undefined\")\n    ? (params as number[][])\n    : undefined;\n};\n\nexport const initTraining = (type: TrainingType): number[] | undefined => {\n  const trainingMenu = trainings[type];\n  for (let i = 0; i < 100; i++) {\n    const params = new Array(trainingMenu.paramsSize)\n      .fill(0)\n      .map(() => Math.random());\n    const validated = trainingMenu.validateParams(params);\n    if (Array.isArray(validated)) {\n      return validated;\n    }\n    if (validated) {\n      return params;\n    }\n  }\n};\n\nexport const validateState = (type: TrainingType, state: number[]) =>\n  state.length === trainings[type].stateSize;\n\nexport const judgeScore = (\n  type: TrainingType,\n  params: number[],\n  state?: number[]\n) => trainings[type].judgeScore(params, state);\n\nexport const getRating = (score: number) => {\n  if (score === 1) {\n    return Rating.Legend;\n  }\n  if (score >= 0.9) {\n    return Rating.Excellent;\n  }\n  if (score >= 0.7) {\n    return Rating.Good;\n  }\n  return Rating.Bad;\n};\n\nexport const getDuration = (type: TrainingType, level: Level) => {\n  return trainings[type].duration[level];\n};\n","/** @jsx jsx */\nimport React, { useCallback, useState, Fragment } from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { styled } from \"@katachi/style\";\n\nimport { TrainingType, Level } from \"@katachi/training\";\n\nexport { TrainingType, Level };\n\nconst types: ([TrainingType, string])[] = [\n  [TrainingType.VerticalLine2, \"垂直な棒の比率\"]\n];\nconst levels: [Level, string][] = [\n  [Level.Easy, \"Easy\"],\n  [Level.Normal, \"Normal\"],\n  [Level.Hard, \"Hard\"],\n  [Level.Ultimate, \"Ultimate\"]\n];\n\nexport interface Props {\n  className?: string;\n  onSelect?: (type: TrainingType, level: Level) => void;\n}\n\nconst TrainingMenu: React.FC<Props> = ({ className, onSelect }) => {\n  const [selectedType, selectType] = useState<TrainingType>();\n\n  const handleTypeClick = useCallback(\n    (type?: TrainingType) => () => {\n      console.log(\"ok\");\n      selectType(type);\n    },\n    []\n  );\n\n  const handleLevelClick = useCallback(\n    (level: Level) => () => {\n      if (onSelect && selectedType) {\n        onSelect(selectedType, level);\n      }\n    },\n    [onSelect, selectedType]\n  );\n\n  return (\n    <div className={className}>\n      {typeof selectedType === \"undefined\" ? (\n        types.map(([type, label]) => (\n          <MenuItem key={type} onClick={handleTypeClick(type)}>\n            {label}\n          </MenuItem>\n        ))\n      ) : (\n        <Fragment>\n          <MenuItem onClick={handleTypeClick()}>Back</MenuItem>\n          {levels.map(([level, label]) => (\n            <MenuItem key={level} onClick={handleLevelClick(level)}>\n              {label}\n            </MenuItem>\n          ))}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nconst MenuItem = styled.div<{ bgcolor?: string }>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 200px;\n  max-height: 200px;\n  width: 50vw;\n  height: 50vw;\n  vertical-align: middle;\n  user-select: none;\n  border-radius: 0.5em;\n  box-shadow: 0 0.1em 0.5em #00000030;\n  cursor: pointer;\n  transition: all ease 0.1s;\n  background-color: ${({ bgcolor }) => bgcolor || \"#bbb\"};\n  color: #fff;\n  box-sizing: border-box;\n  margin: 0.3em;\n\n  &:hover {\n    filter: brightness(105%);\n  }\n\n  &:active {\n    filter: brightness(100%);\n    transform: translateY(1px);\n  }\n`;\n\nexport default TrainingMenu;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { styled } from \"@katachi/style\";\n\nexport enum DisplayStyle {\n  Bar,\n  Text\n}\n\nexport interface Props {\n  className?: string;\n  duration?: number;\n  enabled?: boolean;\n  onTimeUp?: () => void;\n  id?: number;\n  displayStyle?: DisplayStyle;\n}\n\nconst Timer: React.FC<Props> = ({\n  className,\n  duration,\n  onTimeUp,\n  id,\n  enabled,\n  displayStyle = DisplayStyle.Bar\n}) => {\n  const [ratio, setRatio] = useState(0);\n  const [seconds, setSeconds] = useState(duration ? ~~(duration / 1000) : 0);\n  const onTimeUpRef = useRef(onTimeUp);\n  onTimeUpRef.current = onTimeUp;\n\n  useEffect(() => {\n    if (!enabled || !duration) return;\n    setRatio(0);\n    setSeconds(0);\n    const start = Date.now();\n    const time = setInterval(() => {\n      const r = Math.min((Date.now() - start) / duration, 1);\n      setRatio(r);\n      setSeconds(Math.ceil((duration - (Date.now() - start)) / 1000));\n      if (r === 1) {\n        clearInterval(time);\n        if (onTimeUpRef.current) {\n          onTimeUpRef.current();\n        }\n      }\n    }, 17);\n    return () => clearInterval(time);\n  }, [duration, enabled, id]);\n\n  return displayStyle === DisplayStyle.Bar ? (\n    <BarWrapper className={className}>\n      {duration && <Bar ratio={ratio} />}\n    </BarWrapper>\n  ) : (\n    <TextWrapper className={className}>{seconds}</TextWrapper>\n  );\n};\n\nconst BarWrapper = styled.div`\n  width: 100%;\n`;\nconst Bar = styled.div<{ ratio: number }>`\n  width: ${({ ratio }) => (1 - ratio) * 100}%;\n  height: 3px;\n  background-color: ${({ theme }) => theme.accent};\n`;\n\nconst TextWrapper = styled.div`\n  font-size: 4rem;\n  width: 2em;\n  padding: 0.2em 0.4em;\n  display: inline-block;\n  text-align: center;\n`;\n\nexport default Timer;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx } from \"@emotion/core\";\n\nimport TrainingMenu, {\n  TrainingType,\n  Level\n} from \"@katachi/components/components/TrainingMenu\";\nexport { TrainingType, Level };\n\nexport interface Props {\n  className?: string;\n  onSelect?: (type: TrainingType, level: Level) => void;\n}\n\nconst TrainingPageMenu: React.FC<Props> = ({ className, onSelect }) => {\n  return (\n    <div className={className}>\n      <TrainingMenu onSelect={onSelect} />\n    </div>\n  );\n};\n\nexport default TrainingPageMenu;\n","export const clamp = (v: number, min: number, max: number) =>\n  v > max ? max : v < min ? min : v;\n\nexport const numberArrayEqual = (a: number[], b: number[]) =>\n  a.length === b.length && a.every((c, i) => c === b[i]);\n","// training constants\nexport const baseLength = 300;\nexport const whiskerLength = 20;\nexport const calcLength = (ratio: number, scaleCorrection: number) =>\n  ratio * baseLength * scaleCorrection;\n\n// style constants\nexport const strokeWith = 3;\nexport const clickablePadding = 30;\n","import React from \"react\";\nimport { KonvaEventObject } from \"konva/types/Node\";\nimport { Line, Layer } from \"react-konva\";\n\nimport { whiskerLength, strokeWith, clickablePadding } from \"./constants\";\n\nexport interface Props {\n  longerLength: number;\n  lineLength: number;\n  x: number;\n  y: number;\n  ratio?: number;\n  answerRatio?: number;\n  onMouseDown?: (e: KonvaEventObject<MouseEvent>) => void;\n  onTouchStart?: (e: KonvaEventObject<TouchEvent>) => void;\n}\n\nconst VerticalLineLayer: React.FC<Props> = ({\n  longerLength,\n  lineLength,\n  x,\n  y,\n  ratio,\n  answerRatio,\n  onMouseDown,\n  onTouchStart\n}) =>\n  longerLength === 0 || lineLength === 0 ? null : (\n    <Layer x={x} y={y}>\n      <Line\n        points={[0, longerLength - lineLength, 0, longerLength]}\n        strokeWidth={strokeWith}\n        stroke=\"#000\"\n      />\n      <Line\n        points={[\n          -whiskerLength / 2,\n          longerLength - lineLength,\n          +whiskerLength / 2,\n          longerLength - lineLength\n        ]}\n        strokeWidth={strokeWith}\n        stroke=\"#000\"\n      />\n      <Line\n        points={[\n          -whiskerLength / 2,\n          longerLength,\n          +whiskerLength / 2,\n          longerLength\n        ]}\n        strokeWidth={strokeWith}\n        stroke=\"#000\"\n      />\n      {typeof ratio === \"number\" && (\n        <Line\n          points={[\n            -whiskerLength / 2,\n            longerLength - lineLength * (1 - ratio),\n            whiskerLength / 2,\n            longerLength - lineLength * (1 - ratio)\n          ]}\n          strokeWidth={strokeWith}\n          stroke=\"#000\"\n        />\n      )}\n      {answerRatio && (\n        <Line\n          points={[\n            -whiskerLength / 2,\n            longerLength - lineLength * (1 - answerRatio),\n            whiskerLength / 2,\n            longerLength - lineLength * (1 - answerRatio)\n          ]}\n          strokeWidth={strokeWith}\n          stroke=\"#f00\"\n        />\n      )}\n      <Line\n        points={[0, -clickablePadding, 0, longerLength + clickablePadding]}\n        strokeWidth={clickablePadding}\n        onMouseDown={onMouseDown}\n        onTouchStart={onTouchStart}\n        stroke=\"transparent\"\n      />\n    </Layer>\n  );\n\nexport default VerticalLineLayer;\n","import React, { useCallback, useRef } from \"react\";\nimport { KonvaEventObject } from \"konva/types/Node\";\nimport { Stage, Layer, Rect } from \"react-konva\";\nimport { fromEvent, merge } from \"rxjs\";\nimport {\n  mergeMap,\n  takeUntil,\n  map,\n  tap,\n  withLatestFrom,\n  filter,\n  startWith,\n  distinctUntilChanged,\n  mapTo,\n  skip\n} from \"rxjs/operators\";\nimport { useEventCallback } from \"rxjs-hooks\";\n\nimport { clamp, numberArrayEqual } from \"@katachi/util\";\nimport { TrainingProps } from \"../common\";\n\nimport { calcLength } from \"./constants\";\nimport VerticalLineLayer from \"./VerticalLineLayer\";\n\nconst VerticalLine: React.FC<TrainingProps> = ({\n  className,\n  params,\n  state,\n  isAnswerShown,\n  screenSize,\n  scaleCorrection = 1,\n  disableOperation,\n  onUpdate\n}) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const lineLength = calcLength(params[0], scaleCorrection);\n  const line2Length = calcLength(params[1], scaleCorrection);\n  const longerLength = Math.max(lineLength, line2Length);\n  const pointRatio = params[2];\n  const statePointRatio = state ? state[0] : undefined;\n\n  const calcStateFromY = useCallback(\n    (y: number) =>\n      clamp(\n        (y - ((screenSize - longerLength) / 2 + (longerLength - lineLength))) /\n          lineLength,\n        0,\n        1\n      ),\n    [lineLength, longerLength, screenSize]\n  );\n\n  type DragStartInputs = [\n    typeof onUpdate,\n    typeof disableOperation,\n    typeof calcStateFromY,\n    typeof params\n  ];\n  const dragStartInputs: DragStartInputs = [\n    onUpdate,\n    disableOperation,\n    calcStateFromY,\n    params\n  ];\n  const [dragStartCallback, statePointRatio2] = useEventCallback<\n    KonvaEventObject<MouseEvent | TouchEvent>,\n    number | undefined,\n    DragStartInputs\n  >(\n    (event$, inputs$, state$) =>\n      merge(\n        inputs$.pipe(\n          map(([, , , p]) => p),\n          distinctUntilChanged(numberArrayEqual),\n          mapTo(undefined)\n        ),\n        event$.pipe(\n          withLatestFrom(inputs$),\n          filter(([, [, disableOperation]]) => !disableOperation),\n          map(([e]) => [\n            e.evt instanceof TouchEvent\n              ? e.evt.targetTouches[0].pageY\n              : e.evt.pageY,\n            wrapperRef.current\n              ? wrapperRef.current.getBoundingClientRect().top\n              : 0\n          ]),\n          map(([pageY, offsetY]) => [pageY - offsetY, offsetY] as const),\n          mergeMap(([firstY, offsetY]) =>\n            merge(\n              fromEvent<MouseEvent>(document, \"mousemove\"),\n              fromEvent<TouchEvent>(document, \"touchmove\")\n            ).pipe(\n              map(\n                e2 =>\n                  (e2 instanceof TouchEvent\n                    ? e2.targetTouches[0].pageY\n                    : e2.pageY) - offsetY\n              ),\n              startWith(firstY),\n              takeUntil(\n                merge(\n                  merge(\n                    fromEvent(document, \"mouseup\"),\n                    fromEvent(document, \"touchend\")\n                  ).pipe(\n                    withLatestFrom(state$, inputs$),\n                    tap(([, y, [onUpdate, disableOperation]]) => {\n                      if (\n                        typeof y === \"number\" &&\n                        onUpdate &&\n                        !disableOperation\n                      ) {\n                        onUpdate([y]);\n                      }\n                    })\n                  ),\n                  inputs$.pipe(\n                    skip(1),\n                    map(([, disableOperation]) => disableOperation),\n                    distinctUntilChanged(),\n                    filter(d => !!d)\n                  ),\n                  inputs$.pipe(\n                    skip(1),\n                    map(([, , , params]) => params),\n                    distinctUntilChanged(numberArrayEqual)\n                  )\n                )\n              ),\n              withLatestFrom(inputs$),\n              map(([y, [, , calcStateFromY]]) => calcStateFromY(y))\n            )\n          )\n        )\n      ),\n    statePointRatio,\n    dragStartInputs\n  );\n\n  return (\n    <div ref={wrapperRef}>\n      <Stage className={className} width={screenSize} height={screenSize}>\n        <Layer>\n          <Rect stroke=\"#eee\" width={screenSize} height={screenSize} />\n        </Layer>\n        <VerticalLineLayer\n          x={screenSize / 3}\n          y={(screenSize - longerLength) / 2}\n          lineLength={line2Length}\n          longerLength={longerLength}\n          ratio={pointRatio}\n        />\n        <VerticalLineLayer\n          x={(screenSize / 3) * 2}\n          y={(screenSize - longerLength) / 2}\n          lineLength={lineLength}\n          longerLength={longerLength}\n          ratio={statePointRatio2 ? statePointRatio2 : undefined}\n          answerRatio={isAnswerShown ? pointRatio : undefined}\n          onMouseDown={dragStartCallback}\n          onTouchStart={dragStartCallback}\n        />\n      </Stage>\n    </div>\n  );\n};\n\nexport default VerticalLine;\n","import React from \"react\";\n\nimport { TrainingType } from \"@katachi/training\";\nimport { TrainingProps } from \"./common\";\nimport VerticalLine from \"./VerticalLine\";\n\nexport { TrainingType };\n\nexport interface Props {\n  className?: string;\n  type: TrainingType;\n  params: number[];\n  state?: number[];\n  isAnswerShown?: boolean;\n  disableOperation?: boolean;\n  screenSize: number;\n  scaleCorrection?: number;\n  onUpdate?: (state: number[]) => void;\n}\n\nconst getTrainingComponent = (\n  t: TrainingType\n): React.FC<TrainingProps> | undefined => {\n  switch (t) {\n    case TrainingType.VerticalLine2:\n      return VerticalLine;\n  }\n  return undefined;\n};\n\nconst Training: React.FC<Props> = props => {\n  const Component = getTrainingComponent(props.type);\n  if (!Component) return null;\n  return <Component {...props} />;\n};\n\nexport default Training;\n","/** @jsx jsx */\nimport React, { useState, useCallback, Fragment } from \"react\";\nimport { css, jsx } from \"@emotion/core\";\n\nimport Button from \"../Button\";\nimport Timer, { DisplayStyle } from \"../Timer\";\n\nexport interface Props {\n  className?: string;\n  duration: number;\n  onStart?: () => void;\n}\n\nconst TrainingStart: React.FC<Props> = ({ className, duration, onStart }) => {\n  const [buttonPushed, setButtonPushed] = useState(false);\n  const handleClick = useCallback(() => {\n    setButtonPushed(true);\n  }, []);\n\n  return (\n    <div className={className}>\n      {buttonPushed ? (\n        <div\n          css={css`\n            text-align: center;\n          `}\n        >\n          <Timer\n            duration={duration}\n            enabled\n            onTimeUp={onStart}\n            displayStyle={DisplayStyle.Text}\n          />\n        </div>\n      ) : (\n        <Fragment>\n          <div>トレーニングを始める</div>\n          <Button onClick={handleClick}>START</Button>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default TrainingStart;\n","import React from \"react\";\nimport { styled } from \"@katachi/style\";\n\nimport { getRating, Rating as RatingEnum } from \"@katachi/training\";\n\nexport interface Props {\n  className?: string;\n  score: number;\n  small?: boolean;\n}\n\nconst styles: { [key in RatingEnum]: { color: string } } = {\n  [RatingEnum.Legend]: { color: \"red\" },\n  [RatingEnum.Excellent]: { color: \"red\" },\n  [RatingEnum.Good]: { color: \"red\" },\n  [RatingEnum.Bad]: { color: \"red\" }\n};\n\nconst Rating: React.FC<Props> = ({ className, score, small }) => {\n  const rating = getRating(score);\n  return (\n    <StyledSvg\n      rating={rating}\n      className={className}\n      version=\"1.1\"\n      width={small ? 100 : 170}\n      height={small ? 30 : 50}\n      viewBox={small ? \"0 0 100 30\" : \"0 0 170 50\"}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    >\n      <defs>\n        <filter id=\"inset-shadow\">\n          <feOffset dx=\"2\" dy=\"3\" />\n          <feGaussianBlur stdDeviation=\"1\" result=\"offset-blur\" />\n          <feComposite\n            operator=\"out\"\n            in=\"SourceGraphic\"\n            in2=\"offset-blur\"\n            result=\"inverse\"\n          />\n          <feFlood flood-color=\"black\" flood-opacity=\"0.40\" result=\"color\" />\n          <feComposite operator=\"in\" in=\"color\" in2=\"inverse\" result=\"shadow\" />\n          <feComposite operator=\"over\" in=\"shadow\" in2=\"SourceGraphic\" />\n        </filter>\n      </defs>\n      <text\n        x=\"50%\"\n        y=\"50%\"\n        text-anchor=\"middle\"\n        dominant-baseline=\"central\"\n        fontSize={small ? 16 : 24}\n        fontWeight=\"bold\"\n        fill={styles[rating].color}\n        stroke=\"#000\"\n        strokeWidth={1}\n        filter=\"url(#inset-shadow)\"\n      >\n        {rating.toUpperCase()}\n      </text>\n    </StyledSvg>\n  );\n};\n\nconst StyledSvg = styled.svg<{ rating: RatingEnum }>`\n  display: inline-block;\n`;\n\nexport default Rating;\n","import React from \"react\";\nimport { TrainingType } from \"@katachi/training\";\n\nimport Rating from \"../Rating\";\n\nexport { TrainingType };\n\nexport interface Props {\n  className?: string;\n  type: TrainingType;\n  scores: number[];\n}\n\nconst humanReadableScore = (score: number) => Math.round(score * 100);\n\nconst TrainingResult: React.FC<Props> = ({ className, scores, type }) => {\n  const totalScore =\n    scores.length > 0 ? scores.reduce((a, b) => a + b, 0) / scores.length : 0;\n  return (\n    <div className={className}>\n      <h1>{type}</h1>\n      <p>\n        Total: {humanReadableScore(totalScore)} <Rating score={totalScore} />\n      </p>\n      <ul>\n        {scores.map((s, i) => (\n          <li>\n            <span>\n              {i + 1}: {humanReadableScore(s)}\n            </span>\n            <Rating small score={s} />\n          </li>\n        ))}{\" \"}\n      </ul>\n    </div>\n  );\n};\n\nexport default TrainingResult;\n","/** @jsx jsx */\nimport React, { useState, useCallback, useMemo, useRef, Fragment } from \"react\";\nimport { jsx, css } from \"@emotion/core\";\nimport useResizeObserver from \"use-resize-observer\";\n\nimport {\n  TrainingType,\n  validateState,\n  judgeScore,\n  initTrainings,\n  getDuration,\n  Level\n} from \"@katachi/training\";\nimport Training from \"@katachi/components/components/Training\";\nimport Button from \"@katachi/components/components/Button\";\nimport Timer from \"@katachi/components/components/Timer\";\nimport TrainingStart from \"@katachi/components/components/TrainingStart\";\nimport TrainingResult from \"@katachi/components/components/TrainingResult\";\nimport Rating from \"@katachi/components/components/Rating\";\n\nexport { TrainingType, Level };\n\nexport interface Props {\n  className?: string;\n  type: TrainingType;\n  scaleCorrection?: number;\n  level: Level;\n  onFinish?: (\n    scores: number[],\n    type: TrainingType,\n    trainings: number[][]\n  ) => void;\n}\n\nconst trainingCount = 10;\nconst maxScreenSize = 500;\n\nconst TrainingPage: React.FC<Props> = ({\n  className,\n  type,\n  scaleCorrection,\n  level,\n  onFinish\n}) => {\n  const scores = useRef<number[]>([]);\n  const trainings = useMemo(() => initTrainings(type, trainingCount), [type]);\n  const [started, setStarted] = useState(false);\n  const [currentTraining, changeTraining] = useState(0);\n  const [currentState, setCurrentState] = useState<number[]>();\n  const [isAnswerShown, setAnswerShown] = useState(false);\n  const [resizeRef, width] = useResizeObserver();\n\n  const handleAnswer = useCallback(() => {\n    if (!trainings || trainings.length <= currentTraining || !currentState)\n      return;\n    const score = judgeScore(type, trainings[currentTraining], currentState);\n    scores.current = [...scores.current, score];\n    setAnswerShown(true);\n  }, [currentState, currentTraining, trainings, type]);\n\n  const handleNext = useCallback(() => {\n    if (!trainings) return;\n    setAnswerShown(false);\n    setCurrentState(undefined);\n    changeTraining(i => i + 1);\n  }, [trainings]);\n\n  const isAnswerable = useMemo(\n    () => !isAnswerShown && currentState && validateState(type, currentState),\n    [currentState, isAnswerShown, type]\n  );\n\n  const handleTimeUp = useCallback(() => {\n    if (!trainings || trainings.length <= currentTraining) return;\n    const score = judgeScore(\n      type,\n      trainings[currentTraining],\n      isAnswerable ? currentState : undefined\n    );\n    scores.current = [...scores.current, score];\n    setAnswerShown(true);\n  }, [currentState, currentTraining, isAnswerable, trainings, type]);\n\n  const handleStart = useCallback(() => {\n    setStarted(true);\n  }, []);\n\n  if (!trainings) return null;\n  const trainingSize = Math.min(width, maxScreenSize);\n  const duration = getDuration(type, level);\n\n  return (\n    <div\n      css={css`\n        position: relative;\n        padding: 1em;\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n      `}\n      className={className}\n    >\n      <div\n        ref={resizeRef}\n        css={css`\n          width: 100%;\n          height: 100%;\n          box-sizing: border-box;\n        `}\n      >\n        {!started ? (\n          <TrainingStart duration={3000} onStart={handleStart} />\n        ) : trainings.length <= currentTraining ? (\n          <Fragment>\n            <TrainingResult type={type} scores={scores.current} />\n            <Button\n              onClick={() => {\n                if (onFinish) {\n                  onFinish(scores.current, type, trainings);\n                }\n              }}\n            >\n              Finish\n            </Button>\n          </Fragment>\n        ) : (\n          <div\n            css={css`\n              width: 100%;\n              height: 100%;\n              display: flex;\n              flex-direction: column;\n              box-sizing: border-box;\n            `}\n          >\n            <Timer\n              css={css`\n                position: absolute;\n                top: 0;\n                left: 0;\n              `}\n              id={currentTraining}\n              enabled={!isAnswerShown}\n              duration={duration}\n              onTimeUp={handleTimeUp}\n            />\n            <div\n              css={css`\n                text-align: center;\n                visibility: ${isAnswerShown ? \"visible\" : \"hidden\"};\n              `}\n            >\n              <Rating\n                score={\n                  scores.current.length > 0\n                    ? scores.current[scores.current.length - 1]\n                    : 0\n                }\n              />\n            </div>\n            <div\n              css={css`\n                flex: auto;\n                text-align: center;\n              `}\n            >\n              <Training\n                css={css`\n                  margin: 0 auto;\n                  width: ${trainingSize}px;\n                `}\n                type={type}\n                params={trainings[currentTraining]}\n                screenSize={trainingSize}\n                scaleCorrection={scaleCorrection}\n                isAnswerShown={isAnswerShown}\n                disableOperation={isAnswerShown}\n                onUpdate={setCurrentState}\n              />\n            </div>\n            <div\n              css={css`\n                margin-top: auto;\n              `}\n            >\n              {isAnswerable && <Button onClick={handleAnswer}>OK</Button>}\n              {isAnswerShown && <Button onClick={handleNext}>Next</Button>}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TrainingPage;\n","import React from \"react\";\n\nexport interface Props {\n  className?: string;\n}\n\nconst ReportPage: React.FC<Props> = ({ className }) => {\n  return <div className={className}>WIP</div>;\n};\n\nexport default ReportPage;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\n\nimport { useTheme } from \"@katachi/style\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport interface MenuItem {\n  id: string;\n  label: string;\n  icon?: IconProp;\n  iconColor?: string;\n}\n\nexport interface Props {\n  className?: string;\n  items?: MenuItem[];\n  onSelect?: (id: string) => void;\n}\n\nconst Menu: React.FC<Props> = ({ className, items, onSelect }) => {\n  const theme = useTheme();\n\n  const handleSelect = (id: string) => () => {\n    if (onSelect) {\n      onSelect(id);\n    }\n  };\n\n  return (\n    <ul\n      className={className}\n      css={css`\n        margin: 0;\n        padding: 0;\n        background-color: #fff;\n      `}\n    >\n      {items &&\n        items.map(item => (\n          <li\n            css={css`\n              display: block;\n              padding: 0.8em 1em 0.8em ${item.icon ? \"1em\" : \"3em\"};\n              user-select: none;\n              cursor: pointer;\n              position: relative;\n              transition: all ease 0.1s;\n              font-size: 0.9rem;\n              border-top: 1px solid #efefef;\n\n              &:after {\n                content: \">\";\n                float: right;\n                color: ${theme.accent};\n                font-size: 0.9rem;\n                font-weight: bold;\n              }\n\n              &:active:after {\n                color: #fff;\n              }\n\n              &:active {\n                background-color: ${theme.accent};\n                color: #fff;\n              }\n            `}\n            key={item.id}\n            onClick={handleSelect(item.id)}\n          >\n            {item.icon && (\n              <FontAwesomeIcon\n                color={item.iconColor}\n                icon={item.icon}\n                css={css`\n                  margin-top: -0.1em;\n                  margin-right: 0.7em;\n                  font-size: 1.2em;\n                  vertical-align: middle;\n                `}\n              />\n            )}\n            {item.label}\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default Menu;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport Menu from \"@katachi/components/components/Menu\";\n\nexport enum Item {\n  ScaleCorrection = \"scalecorrection\",\n  SignOut = \"signout\"\n}\n\nexport interface Props {\n  className?: string;\n  onSelect?: (item: Item) => void;\n}\n\nconst items = [\n  { id: Item.ScaleCorrection, label: \"スクリーンサイズの補正\" },\n  { id: Item.SignOut, label: \"ログアウト\" }\n];\n\nconst SettingPage: React.FC<Props> = ({ className, onSelect }) => {\n  return (\n    <div\n      className={className}\n      css={css`\n        width: 100%;\n        height: 100%;\n        background-color: #f0f0f0;\n      `}\n    >\n      <Menu\n        items={items}\n        onSelect={id => {\n          if (onSelect) {\n            onSelect(id as Item);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SettingPage;\n","/** @jsx jsx */\nimport React, { useState, useEffect } from \"react\";\nimport { css, jsx } from \"@emotion/core\";\n\nimport Button from \"../Button\";\n\nexport interface Props {\n  className?: string;\n  scaleCorrection?: number;\n  onEnter?: (scaleCorrection: number) => void;\n}\n\nconst basePixelLength = 150;\nconst baseCmLength = 3;\n\nconst ScaleCorrector: React.FC<Props> = ({\n  className,\n  scaleCorrection,\n  onEnter\n}) => {\n  const [value, setValue] = useState(\n    typeof scaleCorrection === \"number\" ? scaleCorrection : 50\n  );\n  useEffect(() => {\n    if (typeof scaleCorrection === \"number\") {\n      setValue(scaleCorrection);\n    }\n  }, [scaleCorrection]);\n  const sc = value / 100 + 0.5;\n\n  return (\n    <div className={className}>\n      <p\n        css={css`\n          text-align: center;\n          margin: 0;\n          padding: 2em 0;\n        `}\n      >\n        棒の長さが {baseCmLength}cm になるように調整してください\n      </p>\n      <div\n        css={css`\n          padding: 5em 0;\n        `}\n      >\n        <div\n          css={css`\n            width: ${basePixelLength * sc}px;\n            height: 3px;\n            background-color: #000;\n            margin: 0 auto;\n          `}\n        />\n      </div>\n      <p\n        css={css`\n          text-align: center;\n          margin: 0 0 5em 0;\n        `}\n      >\n        <input\n          type=\"range\"\n          min={0}\n          max={100}\n          value={value}\n          onChange={e => setValue(parseFloat(e.currentTarget.value))}\n          css={css`\n            width: 50%;\n            min-width: 300px;\n          `}\n        />\n      </p>\n      <Button\n        onClick={() => {\n          if (onEnter) {\n            onEnter(sc);\n          }\n        }}\n      >\n        OK\n      </Button>\n    </div>\n  );\n};\n\nexport default ScaleCorrector;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport ScaleCorrector from \"@katachi/components/components/ScaleCorrector\";\n\nexport interface Props {\n  className?: string;\n  scaleCorrection?: number;\n  onScaleCorrectionEnter?: (sc: number) => void;\n}\n\nconst ScaleCorrectionPage: React.FC<Props> = ({\n  className,\n  scaleCorrection,\n  onScaleCorrectionEnter\n}) => {\n  return (\n    <div\n      className={className}\n      css={css`\n        padding: 1em;\n      `}\n    >\n      <ScaleCorrector\n        scaleCorrection={scaleCorrection}\n        onEnter={onScaleCorrectionEnter}\n      />\n    </div>\n  );\n};\n\nexport default ScaleCorrectionPage;\n","/** @jsx jsx */\nimport React, { useState } from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { css, jsx } from \"@emotion/core\";\n\nimport { GlobalStyle, ThemeProvider } from \"./style\";\nimport AppContainer, { Mode } from \"./components/components/AppContainer\";\nimport HomePage from \"./components/pages/HomePage\";\nimport TrainingMenuPage, { Level } from \"./components/pages/TrainingMenuPage\";\nimport TrainingPage, { TrainingType } from \"./components/pages/TrainingPage\";\nimport ReportPage from \"./components/pages/ReportPage\";\nimport SettingPage, { Item } from \"./components/pages/SettingPage\";\nimport ScaleCorrectionPage from \"./components/pages/ScaleCorrectionPage\";\n\nenum Route {\n  Home,\n  TrainingMenu,\n  Training,\n  Report,\n  Setting,\n  ScaleCorrection\n}\n\nconst App: React.FC = () => {\n  const [currentRoute, jumpTo] = useState<Route>(Route.Home);\n  const [scaleCorrection, setScaleCorrection] = useState(1);\n  const [training, setTraining] = useState<[TrainingType, Level]>();\n\n  return (\n    <ThemeProvider>\n      <GlobalStyle />\n      <AppContainer\n        css={css`\n          width: 100%;\n          height: 100%;\n        `}\n        currentMode={\n          currentRoute === Route.Training || currentRoute === Route.TrainingMenu\n            ? Mode.Training\n            : currentRoute === Route.Report\n            ? Mode.Report\n            : currentRoute === Route.Setting\n            ? Mode.Setting\n            : undefined\n        }\n        navHidden={\n          currentRoute === Route.Home || currentRoute === Route.Training\n        }\n        onModeChange={mode => {\n          if (mode === Mode.Training) {\n            jumpTo(Route.TrainingMenu);\n          }\n          if (mode === Mode.Report) {\n            jumpTo(Route.Report);\n          }\n          if (mode === Mode.Setting) {\n            jumpTo(Route.Setting);\n          }\n        }}\n        headerClosable={currentRoute === Route.Training}\n        onHeaderClose={() => {\n          jumpTo(Route.TrainingMenu);\n          setTraining(undefined);\n        }}\n      >\n        {currentRoute === Route.Home && (\n          <HomePage\n            onSignIn={() => {\n              jumpTo(Route.TrainingMenu);\n            }}\n          />\n        )}\n        {currentRoute === Route.TrainingMenu && (\n          <TrainingMenuPage\n            onSelect={(type, level) => {\n              setTraining([type, level]);\n              jumpTo(Route.Training);\n            }}\n          />\n        )}\n        {currentRoute === Route.Training && training && (\n          <TrainingPage\n            type={training[0]}\n            level={training[1]}\n            scaleCorrection={scaleCorrection}\n            onFinish={() => {\n              jumpTo(Route.TrainingMenu);\n            }}\n          />\n        )}\n        {currentRoute === Route.Report && <ReportPage />}\n        {currentRoute === Route.Setting && (\n          <SettingPage\n            onSelect={mode => {\n              if (mode === Item.ScaleCorrection) {\n                jumpTo(Route.ScaleCorrection);\n              }\n              // if (mode === Item.SignOut) {\n              //   jumpTo(Route.Home);\n              // }\n            }}\n          />\n        )}\n        {currentRoute === Route.ScaleCorrection && (\n          <ScaleCorrectionPage\n            onScaleCorrectionEnter={sc => {\n              setScaleCorrection(sc);\n              jumpTo(Route.Setting);\n            }}\n          />\n        )}\n      </AppContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}